=begin
#Scubawhere API Documentation

#This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 

OpenAPI spec version: 1.0.0
Contact: bryan@scubawhere.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PackageApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PackageApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PackageApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PackageApi' do
    it 'should create an instact of PackageApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PackageApi)
    end
  end

  # unit tests for create_package
  # Create a new package
  # 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @option opts [Date] :available_from 
  # @option opts [Date] :available_until 
  # @option opts [Array<Integer>] :tickets 
  # @option opts [Array<Integer>] :courses 
  # @option opts [Array<Integer>] :accommodations 
  # @option opts [Array<Integer>] :addons 
  # @option opts [Array<Integer>] :prices 
  # @return [InlineResponse20032]
  describe 'create_package test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_package
  # Delete a package by ID
  # 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'delete_package test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_package
  # Update a package by ID
  # 
  # @param id 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @option opts [Date] :available_from 
  # @option opts [Date] :available_until 
  # @option opts [Array<Integer>] :tickets 
  # @option opts [Array<Integer>] :courses 
  # @option opts [Array<Integer>] :accommodations 
  # @option opts [Array<Integer>] :addons 
  # @option opts [Array<Integer>] :prices 
  # @return [InlineResponse20033]
  describe 'edit_package test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_packages
  # Retrieve all packages including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Package>]
  describe 'get_all_packages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_with_trashed_packages
  # Retrieve all packages including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Package>]
  describe 'get_all_with_trashed_packages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_package
  # Retrieve a package by ID
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id 
  # @return [InlineResponse20032]
  describe 'get_package test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
