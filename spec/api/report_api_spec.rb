=begin
#Scubawhere API Documentation

#This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 

OpenAPI spec version: 1.0.0
Contact: bryan@scubawhere.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ReportApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ReportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportApi' do
    it 'should create an instact of ReportApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ReportApi)
    end
  end

  # unit tests for get_revenue_stream_report
  # Get a report containing the distribution of revenue made from all the tickets, packages, courses, addons, accommodations
  # 
  # @param after 
  # @param before 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20040]
  describe 'get_revenue_stream_report test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sources_report
  # Get a report about the distribution of revenue between the diffrent source of bookings
  # 
  # @param after 
  # @param before 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20041]
  describe 'get_sources_report test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_training_utilisation_report
  # Get a report containing the utilisation of all classes between the specified dates
  # 
  # @param after 
  # @param before 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20042]
  describe 'get_training_utilisation_report test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_utilisation_report
  # Get a report containing the utilisation of all trips between the specified dates
  # 
  # @param after 
  # @param before 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20042]
  describe 'get_utilisation_report test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
