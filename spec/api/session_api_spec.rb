=begin
#Scubawhere API Documentation

#This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 

OpenAPI spec version: 1.0.0
Contact: bryan@scubawhere.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SessionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SessionApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SessionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionApi' do
    it 'should create an instact of SessionApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SessionApi)
    end
  end

  # unit tests for create_session
  # Create a new session
  # 
  # @param start 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :boat_id 
  # @option opts [Integer] :trip_id 
  # @return [InlineResponse20043]
  describe 'create_session test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_session
  # Delete a session by ID
  # 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'delete_session test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_session
  # Update a session by ID
  # 
  # @param id 
  # @param start 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :boat_id 
  # @return [InlineResponse20044]
  describe 'edit_session test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for filter_sessions
  # Retrieve all of tsessions that match a filter
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :after 
  # @option opts [Date] :before 
  # @option opts [Integer] :trip_id 
  # @option opts [Integer] :ticket_id 
  # @option opts [Integer] :package_id 
  # @option opts [Integer] :course_id 
  # @return [InlineResponse20045]
  describe 'filter_sessions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_sessions
  # Retrieve all sessions including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Session>]
  describe 'get_all_sessions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_with_trashed_sessions
  # Retrieve all sessions including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Session>]
  describe 'get_all_with_trashed_sessions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_manifest
  # Retrieve the customer manifest for this session
  # 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20043]
  describe 'get_manifest test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_session
  # Retrieve a session by ID
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id 
  # @return [InlineResponse20043]
  describe 'get_session test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_today_sessions
  # Retrieve all of todays sessions
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20045]
  describe 'get_today_sessions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tommorow_sessions
  # Retrieve all of tommorows sessions
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20045]
  describe 'get_tommorow_sessions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
