=begin
#Scubawhere API Documentation

#This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 

OpenAPI spec version: 1.0.0
Contact: bryan@scubawhere.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ClassApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ClassApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ClassApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ClassApi' do
    it 'should create an instact of ClassApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ClassApi)
    end
  end

  # unit tests for class_get
  # Retrieve a class by ID
  # 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Training]
  describe 'class_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_class
  # Create a new class
  # 
  # @param name 
  # @param duration 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @return [InlineResponse20021]
  describe 'create_class test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_class
  # Delete a class by ID
  # 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'delete_class test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_class
  # Update a class by ID
  # 
  # @param id 
  # @param name 
  # @param duration 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @return [InlineResponse20022]
  describe 'edit_class test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_class
  # Retrieve all classes including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Training>]
  describe 'get_all_class test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_with_trashed_class
  # Retrieve all classes including any deleted models
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Training>]
  describe 'get_all_with_trashed_class test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
