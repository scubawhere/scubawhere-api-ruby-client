=begin
#Scubawhere API Documentation

#This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 

OpenAPI spec version: 1.0.0
Contact: bryan@scubawhere.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::LocationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LocationApi' do
  before do
    # run before each test
    @instance = SwaggerClient::LocationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LocationApi' do
    it 'should create an instact of LocationApi' do
      expect(@instance).to be_instance_of(SwaggerClient::LocationApi)
    end
  end

  # unit tests for attach_location
  # Attach a location to a company
  # 
  # @param location_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'attach_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_location
  # Create a location
  # 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description 
  # @option opts [Float] :latitude 
  # @option opts [Float] :longitude 
  # @option opts [Array<Integer>] :tags 
  # @return [InlineResponse2003]
  describe 'create_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dettach_location
  # Dettach a location to a company
  # 
  # @param location_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'dettach_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_locations
  # Retrieve all locations associated with the company
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'get_all_locations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_location_tags
  # Retrieve all tags associated to all locations
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'get_location_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_location
  # Update a location
  # 
  # @param location_id 
  # @param description 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'update_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
